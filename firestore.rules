rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a Super Admin
    function isSuperAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'superadmin';
    }

    // Helper function to check if a user is an Admin of a specific store
    function isStoreAdmin(userId, storeId) {
      return exists(/databases/$(database)/documents/stores/$(storeId)) &&
             userId in get(/databases/$(database)/documents/stores/$(storeId)).data.adminUids;
    }

    // Helper function to check if a user is a Cashier of a specific store
    function isStoreCashier(userId, storeId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.storeId == storeId;
    }
    
    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // --- Global Settings ---

    // App Settings (fees, promo, etc.) can only be read by any signed-in user, but only written by Super Admins.
    match /appSettings/{setting} {
      allow read: if isSignedIn();
      allow write: if isSuperAdmin(request.auth.uid);
    }
    
    // Platform-wide statistics can only be read by super admins.
    // In a real scenario, this would be written by a trusted Cloud Function.
    match /platform/stats {
        allow read: if isSuperAdmin(request.auth.uid);
        allow write: if false; // Only Cloud Functions should write here
    }

    // Redemption options are public to read for all users, but only admins/superadmins can manage them.
    match /redemptionOptions/{optionId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isSuperAdmin(request.auth.uid) || isStoreAdmin(request.auth.uid, get(/databases/$(database)/documents/users/$(request.auth.uid)).data.storeId);
    }

    // --- User and Store Management ---

    // Any signed-in user can read the user list (for names, etc.), but can only update their own data.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if request.auth.uid == userId; // Allow user creation on signup
      allow update: if request.auth.uid == userId || isSuperAdmin(request.auth.uid); // Allow user to update their own profile, or SuperAdmin to update any
      allow delete: if isSuperAdmin(request.auth.uid);
    }
    
    // All signed-in users can read the list of stores (for the login dropdown).
    // Creating/Updating stores is restricted to admins of that store or superadmins.
    match /stores/{storeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn(); // Allow store creation on registration
      allow update: if isStoreAdmin(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
      allow delete: if isSuperAdmin(request.auth.uid);
    }

    // --- Store-Specific Sub-collections (Products, Customers, Transactions, etc.) ---
    match /products_{storeId}/{docId} {
      allow read: if isStoreAdmin(request.auth.uid, storeId) || isStoreCashier(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
      allow write: if isStoreAdmin(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
    }
    match /customers_{storeId}/{docId} {
      allow read, create: if isStoreAdmin(request.auth.uid, storeId) || isStoreCashier(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
      allow update, delete: if isStoreAdmin(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
    }
    match /transactions_{storeId}/{docId} {
      allow read, create: if isStoreAdmin(request.auth.uid, storeId) || isStoreCashier(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
      allow update, delete: if isStoreAdmin(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
    }
     match /tables_{storeId}/{docId} {
      allow read, write: if isStoreAdmin(request.auth.uid, storeId) || isStoreCashier(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
    }
    match /challenges_{storeId}/{docId} {
       allow read, write: if isStoreAdmin(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
    }
     match /appliedStrategies_{storeId}/{docId} {
       allow read, write: if isStoreAdmin(request.auth.uid, storeId) || isSuperAdmin(request.auth.uid);
    }
    
    // --- Pending Orders ---
    // Anyone in a store can create a pending order.
    match /pendingOrders/{orderId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSuperAdmin(request.auth.uid) || 
                                 isStoreAdmin(request.auth.uid, resource.data.storeId) ||
                                 isStoreCashier(request.auth.uid, resource.data.storeId);
    }
  }
}
