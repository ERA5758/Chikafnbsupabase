
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isAdmin(storeId) {
      let storeAdmins = get(/databases/$(database)/documents/stores/$(storeId)).data.adminUids;
      return request.auth.uid in storeAdmins;
    }

    function isCashier(storeId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'cashier' && user.storeId == storeId;
    }

    // --- Global Settings ---
    match /appSettings/{setting} {
      // Hanya Super Admin yang bisa membaca dan mengubah pengaturan global.
      allow read: if isSignedIn();
      allow write: if isSuperAdmin();
    }

    match /redemptionOptions/{promoId} {
      // Semua pengguna bisa membaca promo, tapi hanya super admin yang bisa mengubah.
      allow read: if isSignedIn();
      allow write: if isSuperAdmin();
    }

    // --- User & Store Management ---
    match /users/{userId} {
      // Izinkan pembuatan akun saat registrasi (unauthenticated write is tricky, secure with Cloud Function ideally)
      allow create: if request.auth.uid == userId;
      // Pengguna bisa baca/update data sendiri. Superadmin/Admin bisa baca/update data user di bawahnya.
      allow read, update: if isSignedIn() && (
                            request.auth.uid == userId ||
                            isSuperAdmin()
                          );
      // Hanya superadmin yang bisa hapus user.
      allow delete: if isSuperAdmin();
    }

    match /stores/{storeId} {
      // Semua user terautentikasi bisa baca daftar toko (untuk login).
      allow read: if isSignedIn();
      // Hanya superadmin yang bisa buat/update/hapus toko.
      allow create, update, delete: if isSuperAdmin();
    }
    
    // --- Platform-wide Stats ---
    match /platform/stats {
      // Hanya super admin yang bisa baca statistik platform.
      allow read: if isSuperAdmin();
      // Tidak ada client yang boleh menulis, ini hanya untuk Cloud Function.
      allow write: if false;
    }


    // --- Store-Specific Subcollections ---
    // Aturan ini berlaku untuk semua sub-koleksi yang polanya `*_<storeId>`.
    // Contoh: products_store_001, transactions_store_001, dll.
    match /{collection}_{storeId}/{docId} {
      // Read: Boleh jika user adalah SuperAdmin, atau Admin/Kasir dari toko tersebut.
      allow read: if isSignedIn() && (
                    isSuperAdmin() ||
                    isAdmin(storeId) ||
                    isCashier(storeId)
                  );
      // Create, Update, Delete: Boleh jika user adalah SuperAdmin atau Admin toko.
      allow create, update, delete: if isSignedIn() && (
                                      isSuperAdmin() ||
                                      isAdmin(storeId)
                                    );
      // Pengecualian: Kasir boleh membuat transaksi baru.
      allow create: if isSignedIn() &&
                      collection == 'transactions' &&
                      (isCashier(storeId) || isAdmin(storeId) || isSuperAdmin());
    }
    
    match /pendingOrders/{orderId} {
      // Siapa saja yang login di toko bisa baca dan buat pending order.
      allow read, create: if isSignedIn();
      // Hanya admin/superadmin yang bisa hapus.
      allow delete: if isSuperAdmin() || isAdmin(get(/databases/$(database)/documents/pendingOrders/$(orderId)).data.storeId);
    }
  }
}
